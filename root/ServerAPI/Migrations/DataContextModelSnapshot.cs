// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerAPI.Data;

#nullable disable

namespace ServerAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerAPI.Entityes.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GEventId")
                        .HasColumnType("int");

                    b.Property<int?>("Losers")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("Winner")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GEventId");

                    b.HasIndex("RoomId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ServerAPI.Entityes.GameEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardsToOneHand")
                        .HasColumnType("int");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rounds")
                        .HasColumnType("int");

                    b.Property<int>("TimePerRound")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameEvents");
                });

            modelBuilder.Entity("ServerAPI.Entityes.GameRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("NeedAuthorisation")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerAmount")
                        .HasColumnType("int");

                    b.Property<string>("RoomLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameRooms");
                });

            modelBuilder.Entity("ServerAPI.Entityes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameRoomId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.Property<bool>("isAuthorised")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GameRoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ServerAPI.Entityes.Game", b =>
                {
                    b.HasOne("ServerAPI.Entityes.GameEvent", "GEvent")
                        .WithMany("Games")
                        .HasForeignKey("GEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServerAPI.Entityes.GameRoom", "Room")
                        .WithMany("Games")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GEvent");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ServerAPI.Entityes.User", b =>
                {
                    b.HasOne("ServerAPI.Entityes.GameRoom", "GameRoom")
                        .WithMany("Users")
                        .HasForeignKey("GameRoomId");

                    b.Navigation("GameRoom");
                });

            modelBuilder.Entity("ServerAPI.Entityes.GameEvent", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("ServerAPI.Entityes.GameRoom", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
